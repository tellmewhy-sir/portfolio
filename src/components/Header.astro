---
let menuLinks = [
  // {
  //   title: 'design',
  //   href: '/design',
  // },
  {
    title: 'me',
    href: '/about',
  },
  {
    title: 'exp',
    href: '/experience',
  },
  {
    title: 'dev',
    href: '/',
  },
  {
    title: 'works',
    href: '/works',
  },
  // {
  //   title: 'blog',
  //   href: '/blog',
  // },
  {
    title: 'contact',
    href: '/contact',
  },
];
const isEven = menuLinks.length % 2 === 0;
const isActive = (href: string) => Astro.url.pathname === href;
---

<header
  id="header"
  class="header relative px-4 flex flex-col md:flex-row items-end md:items-center justify-center w-full"
  transition:persist
  transition:name="header"
>
  <h1 id="title" class="title absolute">
    <span>delutilo.</span>
  </h1>
  <!-- <button class="menu-item active md:hidden" id="nav-trigger">dev</button> -->
  <nav data-prev={0} class="absolute md:relative md:-ml-4 z-10">
    <ul transition:name="menu" class={`menu ${isEven ? 'is-even' : ''}`}>
      {
        menuLinks.map((link, index) => (
          <li
            class={`menu-item ${isActive(link.href) ? 'active' : ''} m-0 md:mx-4`}
            data-order={index + 1}
            data-title={link.title}
          >
            {/* <a href={link.href}>{link.title}</a> */}
            <span data-href={link.href}>{link.title}</span>
          </li>
        ))
      }
      <span class="slider" id="slider"></span>
    </ul>
  </nav>
</header>

<script is:inline src="helpers/animation.js"></script>

<script>
  import { navigate } from 'astro:transitions/client';

  let header: HTMLElement | null =
    document.getElementById<HTMLElement>('header');
  let title: HTMLElement | null = document.getElementById<HTMLElement>('title');
  let nav: HTMLElement | null = document.querySelector<HTMLElement>('nav');
  let menu: HTMLElement | null = document.querySelector<HTMLElement>('.menu');
  let menuItems = document.querySelectorAll('.menu-item');
  let prevActive: HTMLElement | null = null;
  let currActive: HTMLElement | null =
    document.querySelector('.menu-item.active');
  let slider = document.getElementById<HTMLElement>('slider');
  let navTrigger = document.getElementById<HTMLElement>('nav-trigger');

  document.addEventListener('astro:page-load', () => {
    if (window.location.pathname !== '/') {
      header?.classList.add('shrink');
    } else if (window.innerWidth < 768) {
      // get center of window
      // get nav position
      let navRect = nav?.getBoundingClientRect();
      console.log(navRect?.top, title?.clientHeight);
      // place title at right above nav
      title.style.top = `-${currActive?.clientHeight + currActive?.clientHeight / 2}px`;
    }

    if (window.location.pathname === '/') {
      header?.classList.remove('shrink');
    }

    setTimeout(() => {
      if (currActive) {
        highlightMenuItem(slider, currActive);
        menu.style.pointerEvents = 'auto';
      }

      let prev: number = parseInt(nav.dataset.prev);

      if (!parseInt(nav.dataset.prev)) {
        setActiveTab(currActive);
      }
    }, 500);

    function setActiveTab(item: HTMLElement | null) {
      let nextItemOrder = parseInt(item.dataset.order);
      let currActiveOrder = prevActive ? parseInt(currActive.dataset.order) : 3;

      let itemHeight = currActive.clientHeight + 16;
      let stepsFromBase = nextItemOrder - currActiveOrder;

      let scrollDistance = Math.abs(stepsFromBase * itemHeight);
      if (stepsFromBase > 0) {
        scrollDistance = -scrollDistance;
      }

      if (nav?.dataset.prev) {
        let prev = parseInt(nav.dataset.prev);
        scrollDistance += prev;
      }
      nav.style.transform = `translateY(${scrollDistance}px)`;

      currActive.classList.remove('active');
      item.classList.add('active');
      prevActive = currActive;
      currActive = item;

      nav.dataset.prev = scrollDistance;
    }

    menuItems.forEach((item) => {
      item.addEventListener('click', (e) => {
        e.stopPropagation();

        // setActiveTab(item);

        slider.classList.add('highlighted');

        if (item.dataset.title === 'dev') {
          header?.classList.remove('shrink');
        } else {
          // header?.classList.add('shrink');
        }
        if (window.innerWidth < 768) {
          if (menu?.classList.contains('open')) {
            const link = item.querySelector('span');
            navigate(link?.dataset.href || '/');
          } else {
            menu?.classList.add('open');
          }

          // document.body.addEventListener('click', (e) => {
          //   if (menu?.classList.contains('open')) {
          //     menu?.classList.remove('open');
          //   }
          // });
        } else {
          menu.style.pointerEvents = 'none';
        }
      });

      // if window width is less than 768px
      if (window.innerWidth > 768) {
        item.addEventListener('mouseover', () => {
          highlightMenuItem(slider, item);
        });
      }
    });

    nav.addEventListener('mouseleave', () => {
      // highlightMenuItem(slider, currActive);
    });
  });
</script>

<style>
  h1 {
    font-family: 'RaglotDemo', sans-serif;
    font-size: 4rem;
    line-height: 1;
    text-align: center;
    z-index: 5;
  }

  nav {
    /* margin-left: -2rem; */
    transition: all 0.25s;
  }

  .title {
    transition: all 0.5s;

    span {
      display: block;
      transform-style: preserve-3d;
      transform: translateZ(-30px);
    }
  }

  @starting-style {
    .menu-item {
      visibility: hidden;
      opacity: 0;
    }

    /* .title {
      visibility: visible;
      opacity: 1;
    } */
  }

  .header {
    transition: all 0.25s;
    &.shrink {
      transform: scale(0.5);
    }

    &:has(.open) {
      .title {
        perspective: 400px;
        perspective-origin: center;
        /* display: none; */
        /* visibility: hidden; */
        opacity: 0.1;
        /* transition: all 0.25s; */
        filter: blur(5px);
      }
    }
  }

  .menu {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: flex-start;

    @media (max-width: 768px) {
      align-items: flex-end;
    }

    &:hover,
    .open {
      .menu-item:not(.active) {
        visibility: visible;
        /* display: block; */
        opacity: 0.5;
        /* @media (max-width: 768px) {
          opacity: 1;
        } */
      }
    }

    &.is-even {
      transform: translateY(calc(-1rem));
    }
  }

  .menu-item {
    /* display: none; */
    visibility: hidden;
    z-index: 5;
    font-family: 'RaglotDemo', sans-serif;
    font-size: 4rem;
    line-height: 1;
    /* margin: 0 1rem; */
    cursor: pointer;
    transition:
      opacity 0.25s,
      visibility 0.25s;
    transition-behavior: allow-discrete;
    opacity: 0;
    @apply px-8;

    &:hover {
      color: white;
      opacity: 1 !important;
    }

    &.active {
      visibility: visible;
      opacity: 1;
      /* display: block; */
    }

    &:not(.active) {
      @media (max-width: 768px) {
        /* pointer-events: none; */
      }
    }
  }

  .slider {
    position: absolute;
    transition: all 0.25s;
    animation: 500ms ease-in 500ms grow;
    @apply bg-gray-400 rounded-full;

    &.highlighted {
      animation: none;
    }
  }

  @keyframes grow {
    from {
      transform: scaleX(0);
    }
    to {
      transform: scaleX(100%);
    }
  }
</style>
