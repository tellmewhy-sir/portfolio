---
let menuLinks = [
  {
    title: 'design',
    href: '/design',
  },
  {
    title: 'me',
    href: '/about',
  },
  {
    title: 'dev',
    href: '/',
  },
  {
    title: 'blog',
    href: '/blog',
  },
  {
    title: 'contact',
    href: '/contact',
  },
];
const isEven = menuLinks.length % 2 === 0;
const isActive = (href: string) => Astro.url.pathname === href;
---

<header
  id="header"
  class="header flex items-center"
  transition:persist
  transition:name="header"
>
  <h1 id="title" class="title">delutilo.</h1>
  <nav data-prev={0}>
    <ul transition:name="menu" class={`menu ${isEven ? 'is-even' : ''}`}>
      {
        menuLinks.map((link, index) => (
          <li
            class={`menu-item ${isActive(link.href) ? 'active' : ''}`}
            data-order={index + 1}
            data-title={link.title}
          >
            <a href={link.href}>{link.title}</a>
          </li>
        ))
      }
      <span class="slider" id="slider"></span>
    </ul>
  </nav>
</header>

<script is:inline src="helpers/animation.js"></script>

<script>
  let header = document.getElementById('header');
  let nav = document.querySelector('nav');
  let title = document.getElementById('title');
  let menu = document.querySelector('.menu');
  let menuItems = document.querySelectorAll('.menu-item');
  let activeItem = document.querySelector('.menu-item.active');
  let slider = document.getElementById('slider');

  let navDistanceFromTitle = title.offsetTop - nav.offsetTop;

  document.addEventListener('astro:page-load', () => {
    if (window.location.pathname !== '/') {
      header.classList.add('shrink');
    }

    setTimeout(() => {
      console.log('timeout fires');
      if (activeItem) {
        highlightMenuItem(slider, activeItem);
        menu.style.pointerEvents = 'auto';
      }
    }, 500);

    menuItems.forEach((item) => {
      item.addEventListener('click', () => {
        menu.style.pointerEvents = 'none';
        if (item.classList.contains('active')) return;

        let itemOrder = parseInt(item.dataset.order);
        let activeItemOrder = parseInt(activeItem.dataset.order);
        let itemHeight = item.clientHeight + 16;
        let stepsFromBase = itemOrder - activeItemOrder;

        let scrollDistance = Math.abs(stepsFromBase * itemHeight);
        if (stepsFromBase > 0) {
          scrollDistance = -scrollDistance;
        }

        if (nav?.dataset.prev) {
          let prev = parseInt(nav.dataset.prev);
          scrollDistance += prev;
        }
        nav.style.transform = `translateY(${scrollDistance}px)`;

        activeItem.classList.remove('active');
        item.classList.add('active');

        nav.dataset.prev = scrollDistance;

        activeItem = item;

        slider.classList.add('highlighted');

        if (item.dataset.title === 'dev') {
          header?.classList.remove('shrink');
        } else {
          header?.classList.add('shrink');
        }
      });

      item.addEventListener('mouseover', () => {
        highlightMenuItem(slider, item);
      });
    });

    nav.addEventListener('mouseleave', () => {
      highlightMenuItem(slider, activeItem);
    });
  });
</script>

<style>
  h1 {
    font-family: 'RaglotDemo', sans-serif;
    font-size: 4rem;
    line-height: 1;
    text-align: center;
    z-index: 5;
  }

  nav {
    margin-left: -2rem;
    position: relative;
    transition: all 0.25s;
    /* transform-origin: top; */
  }

  /* .title {
    transition: all 0.5s ease-out;
    &.exit {
      transform: translateX(-50%);
      opacity: 0;
    }
  } */

  @starting-style {
    .menu-item {
      visibility: hidden;
      opacity: 0;
    }
  }

  .header {
    transition: all 0.25s;
    &.shrink {
      transform: scale(0.5);
    }
  }

  .menu {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: flex-start;
    &:hover {
      .menu-item:not(.active) {
        visibility: visible;
        opacity: 0.5;
      }
    }

    &.is-even {
      transform: translateY(calc(-1rem));
    }
  }

  .menu-item {
    /* display: none; */
    visibility: hidden;
    z-index: 5;
    font-family: 'RaglotDemo', sans-serif;
    font-size: 4rem;
    line-height: 1;
    margin: 0 1rem;
    cursor: pointer;
    transition:
      opacity 0.25s,
      visibility 0.25s;
    transition-behavior: allow-discrete;
    opacity: 0;
    @apply px-8;

    &:hover {
      color: white;
      opacity: 1 !important;
    }

    &.active {
      visibility: visible;
      opacity: 1;
    }
  }

  .slider {
    position: absolute;
    transition: all 0.25s;
    animation: 500ms ease-in 500ms grow;
    @apply bg-gray-400 rounded-full;

    &.highlighted {
      animation: none;
    }
  }

  @keyframes grow {
    from {
      transform: scaleX(0);
    }
    to {
      transform: scaleX(100%);
    }
  }
</style>
